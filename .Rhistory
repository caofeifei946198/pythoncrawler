x  <- c(1,2,3,4,5,6,7,8)
mean(x)
sd(x)
n <- length(x)
mean(x) <- sum(x)/n
meanx <- sum(x)/n
css <- sum((x - meanx)^2)
sdx <- sqrt(css / (n-1))
meanx
sdx
x <- pretty(c(-3,3), 10)
y <- dnorm(x)
plot(x,y, type = "1", xlab = "normal Deviate", ylab = "density", yaxs="i")
plot(x,y, type = "l", xlab = "normal Deviate", ylab = "density", yaxs="i")
runif(5)
runif(5)
set.seed(1234)
runif(5)
set.seed(1234)
runif(5)
library(MASS)
options(digits=3)
set.seed(1234)
mean <- c(230.7, 146.7, 3.6)
sigma <- matrix(c(15160.8, 6721.2, -47.1, 6721.2, 4700.9, -16.5, -47.1, -16.5, 0.3), nrow = 3, ncol = 3)
mydata <- mvrnorm(500, mean, sigma)
mydata <- as.data.frame(mydata)
names(mydata) <- c("y", "x1","x2")
dim(mydata)
head(mydata, n=10)
name <- "Bob"
cat("hello", name, "\b.\n", "Isn\'t R", "\t", "GREAT?\n")
a <- 5
aqrt(a)
sqrt(a)
b <- c(1.243, 5.654, 2.99)
round(b)
c <- matrix(runif(12), nrow=3)
c
log(c)
mean(c)
mydata <- matrix(rmorm(30), nrow=6)
mydata <- matrix(rnorm(30), nrow=6)
mydata
apply(mydata, 1,mean)
apply(mydata, 2,mean)
apply(mydata, 2,mean, trim = 0.2)
options(digits=2)
student <- c()
quit()
pwd
getwd()
cd /Rtest
chdir("rtest")
feelings <- c("sad","afriad")
for (i in feelings):
print(switch(i,
happy = "I am glad you are happy",
afraid = "there is nothing is fear",
sad = "cheer up",
angry ="calm down now"))
for (i in feelings):
print(switch(i,
happy = "I am glad you are happy",
afraid = "there is nothing is fear",
sad = "cheer up",
angry ="calm down now"))
feelings <- c("sad","afraid")
for (i in feelings):
print(switch(i,
happy = "I am glad you are happy",
afraid = "there is nothing is fear",
sad = "cheer up",
angry ="calm down now"))
feelings <- c("sad","afraid")
for (i in feelings)
print(switch(i,
happy = "I am glad you are happy",
afraid = "there is nothing is fear",
sad = "cheer up",
angry ="calm down now"))
print(
happy = "I am glad you are happy",
afraid = "there is nothing is fear",
sad = "cheer up",
angry ="calm down now")
angry ="calm down now"))'''
switch(type,
long = format(Sys.time(), "%A %B %d %Y"),
short = formaat(Sys.time(), "%m-%d-%y"),
cat(type, "is not a recognized type\n"))
mydate <- function(type="long") {
switch(type,
long = format(Sys.time(), "%A %B %d %Y"),
short = formaat(Sys.time(), "%m-%d-%y"),
cat(type, "is not a recognized type\n"))
}
mydate("long")
mydate("short")
mydate <- function(type="long") {
switch(type,
long = format(Sys.time(), "%A %B %d %Y"),
short = format(Sys.time(), "%m-%d-%y"),
cat(type, "is not a recognized type\n"))
}
mydate("short")
mydate()
myname <- function(type="string") {
switch(type,
name1 = "caofeifei",
name2 = "12345",
cat(type, "is weong"))
}
myname("caofeifei")
myname <- function(type="caofeifei") {
switch(type,
name1 = "caofeifei",
name2 = "12345",
cat(type, "is weong"))
}
myname("caofeifei")
myname <- function(type="name1") {
switch(type,
name1 = "caofeifei",
name2 = "12345",
cat(type, "is weong"))
}
myname("caofeifei")
myname()
myname("lining")
cars <- mtcars(1:5.1:4)
cars <- mtcars[1:5.1:4]
cars
t(cars)
options(digint=3)
options(digits ==3)
options(digits =3)
attach(mtcars)
aggdata <- aggregate(mtcars, by=list(cyl,gear), FUN = mean, na.mv = TRUE)
aggdata
install.packages("reshape2")
library(reshape2)
md <- melt(mydata,id = c("ID", "Time")
)
newdata <- dcast(md, ID-variable, mean)
newdata <- dcast(md, time()-variable, mean)
newdata <- dcast(md, time-variable, mean)
newdata <- dcast(md, time~variable, mean)
newdata <- dcast(md, Time~variable, mean)
newdata <- dcast(md, id-cariable, mean)
md <- melt(mydata,id = c("ID", "Time")
)
newdata <- dcast(md)
newdata <- dcast(md, ID-Time, mean)
newdata <- dcast(md, ID-Time, mean)m
md <- melt(mydata, id = c("ID", "Time"))
md
newdata <- dcast(md, Var1-variabe, mean)
newdata <- dcast(md, Var1-Var2, mean)
install.packages("vcd")
library(vcd)
install.packages("grid")
install.packages("grid")
library(vcd)
install.packages("grid")
install.packages("grid")
library("vcd")
library(grid)
library(vcd)
counts <- table(Arthritis$Improved)
counts
InsectSprays"plotrix"
install.packages("plotrix")
sex <- c("male", "female", "other")
barplot(sex)
sex <- c("male", "female", "other")
y <- c("45.95%", "47.57%", "6.49%")
barplot(y)
setwd("Rtest")
pwd
getwd()
y <- c(45.95%, 47.57%, 6.49%)
y <- [45.95%, 47.57%, 6.49%]
y <- list()[45.95%, 47.57%, 6.49%]
y <- list(45.95%, 47.57%, 6.49%)
x <- c("male","female","others")
y <- c(45.95%, 47.57%, 6.49%)
y <- c("45.95%", "47.57%", "6.49%")
plot(x,y)
plot(x,y, xlab ="sex", ylab = "percent", ylim = 1%:100%)
plot(x,y, xlab ="sex", ylab = "percent")
plot(x$y, xlab ="sex", ylab = "percent")
H <- c(7,12,28,3,41)
barplot(H)
H <- c(0.4595, 0.4757, 0.0649)
barplot(H)
P <- c("male", "female", "others")
barplot(H$P)
barplot(H,P)
H <- c(0.4595, 0.4757, 0.0649)
P <- c("male", "female", "others")
barplot(H,names.arg = P,xlab = "SEX",ylab = "PERCENTION",col = "blue",
main = "nanvbili",border = "red")
barplot(H,names.arg = P,xlab = "SEX",ylab = "PERCENTION",col = c("blue","red", "green"),
main = "nanvbili",border = "red")
barplot(H,names.arg = P,xlab = "SEX",ylab = "PERCENTION",col = c("blue","red", "green"),
,border = "red")
title("the rate of male and female")
getwd()
weichatdata <- read.csv("data.csv", header=TRUE)
getwd()
setwd("/home/feier/python3/python爬虫")
getwd()
weichatdata <- read.table("data.csv", header = TRUE)
weichatdata
weichatdata$Sex <- factor(weichatdata$Sex, levels = c(1,2), labels = c("male","female"))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(tidyr)
install.packages("tidyr")
install.packages("dplyr")
